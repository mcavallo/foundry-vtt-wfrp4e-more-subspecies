name: Release

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump.outputs.new_tag }}
      release_type: ${{ steps.bump.outputs.release_type }}
      changelog: ${{ steps.bump.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # all commits
      - name: Bump and tag new version
        id: bump
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          default_bump: false

  release:
    if: |
      needs.versioning.outputs.new_tag &&
      !startsWith(needs.versioning.outputs.release_type, 'pre')
    name: Release
    runs-on: ubuntu-latest
    needs:
      - versioning
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: "16.x"
      - uses: ./.github/local-actions/yarn-install-and-cache
      - name: Create .env file
        shell: bash
        run: |
          echo -n "" > .env
          echo DATA_SPREADSHEET_ID=${{ secrets.DATA_SPREADSHEET_ID }} >> .env
          echo FOUNDRY_RELEASE_TOKEN="\"${{ secrets.FOUNDRY_RELEASE_TOKEN }}\"" >> .env
          echo GH_API_TOKEN=${{ secrets.GH_API_TOKEN }} >> .env
          echo GOOGLE_PRIVATE_KEY="\"${{ secrets.GOOGLE_PRIVATE_KEY }}\"" >> .env
          echo GOOGLE_SERVICE_ACCOUNT_EMAIL=${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }} >> .env
      - name: Build
        shell: bash
        run: |
          RELEASE_VERSION=${{ needs.versioning.outputs.new_tag }} yarn build
      - name: Read module name
        id: module_name
        shell: bash
        run: |
          echo "out=$(cat package.json | jq -r '.foundryModule.name')" >> $GITHUB_OUTPUT
      - name: Create zip
        run: |
          cd dist/
          zip -r ../${{ steps.module_name.outputs.out }}_${{ needs.versioning.outputs.new_tag }}.zip *
      - name: Create release
        uses: ncipollo/release-action@v1.9.0
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ needs.versioning.outputs.new_tag }}
          artifacts: "./dist/module.json,${{ steps.module_name.outputs.out }}_${{ needs.versioning.outputs.new_tag }}.zip"
          body: ${{ needs.versioning.outputs.changelog }}
      - name: Release module
        shell: bash
        run: |
          yarn foundry:release
